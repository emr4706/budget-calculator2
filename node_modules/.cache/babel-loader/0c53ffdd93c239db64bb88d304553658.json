{"ast":null,"code":"import _objectSpread from \"/Users/user/Desktop/budget-calculator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/user/Desktop/budget-calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Desktop/budget-calculator/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ExpenseForm from \"./components/ExpenseForm\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport Alert from \"./components/Alert\";\nimport uuid from \"uuid/v4\"; /// for uniq id ///\n// const initialExpenses = [\n//   { id: uuid(), charge: \"rent\", amount: 1600 },\n//   { id: uuid(), charge: \"car payment\", amount: 400 },\n//   {\n//     id: uuid(),\n//     charge: \"credit card bill \",\n//     amount: 1200\n//   }\n// ];\n\nconst initialExpenses = localStorage.getItem(\"expenses\") ? JSON.parse(localStorage.getItem(\"expenses\")) : [];\n\nfunction App() {\n  // all expenses, add expense\n  const _useState = useState(initialExpenses),\n        _useState2 = _slicedToArray(_useState, 2),\n        expenses = _useState2[0],\n        setExpenses = _useState2[1]; // single expense\n\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        charge = _useState4[0],\n        setCharge = _useState4[1]; // single amount\n\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        amount = _useState6[0],\n        setAmount = _useState6[1]; // alert\n\n\n  const _useState7 = useState({\n    show: false\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alert = _useState8[0],\n        setAlert = _useState8[1]; // edit\n\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        edit = _useState10[0],\n        setEdit = _useState10[1]; // id\n\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        id = _useState12[0],\n        setId = _useState12[1];\n\n  useEffect(() => {\n    console.log(\"called\");\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  }, [expenses]); // *********** functionality **************\n  //add charge\n\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  }; // add amount\n\n\n  const handleAmount = e => {\n    let amount = e.target.value;\n\n    if (amount === \"\") {\n      setAmount(amount);\n    } else {\n      setAmount(parseInt(amount));\n    }\n  }; // handle alert\n\n\n  const handleAlert = ({\n    type,\n    text\n  }) => {\n    setAlert({\n      show: true,\n      type,\n      text\n    });\n    setTimeout(() => {\n      setAlert({\n        show: false\n      });\n    }, 7000);\n  }; // handle submit\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (charge !== \"\" && amount > 0) {\n      if (edit) {\n        let tempExpenses = expenses.map(item => {\n          return item.id === id ? _objectSpread({}, item, {\n            charge,\n            amount\n          }) : item;\n        });\n        setExpenses(tempExpenses);\n        setEdit(false);\n      } else {\n        const singleExpense = {\n          id: uuid(),\n          charge,\n          amount\n        };\n        setExpenses([...expenses, singleExpense]);\n        handleAlert({\n          type: \"success\",\n          text: \"item added\"\n        });\n      } // set charge back to empty string\n\n\n      setCharge(\"\"); // set amount back to zero\n\n      setAmount(\"\");\n    } else {\n      handleAlert({\n        type: \"danger\",\n        text: `charge can't be empty value and amount value has to be bigger than zero`\n      });\n    }\n  }; // handle delete\n\n\n  const handleDelete = id => {\n    let tempExpenses = expenses.filter(item => item.id !== id);\n    setExpenses(tempExpenses);\n    handleAlert({\n      type: \"danger\",\n      text: \"item deleted\"\n    });\n  }; //clear all items\n\n\n  const clearItems = () => {\n    setExpenses([]);\n  }; // handle edit\n\n\n  const handleEdit = id => {\n    let expense = expenses.find(item => item.id === id);\n    let charge = expense.charge,\n        amount = expense.amount;\n    setCharge(charge);\n    setAmount(amount);\n    setEdit(true);\n    setId(id);\n  };\n\n  return React.createElement(React.Fragment, null, alert.show && React.createElement(Alert, {\n    type: alert.type,\n    text: alert.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"budget calculator\"), React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(ExpenseForm, {\n    handleSubmit: handleSubmit,\n    charge: charge,\n    handleCharge: handleCharge,\n    amount: amount,\n    handleAmount: handleAmount,\n    edit: edit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(ExpenseList, {\n    expenses: expenses,\n    handleDelete: handleDelete,\n    handleEdit: handleEdit,\n    clearItems: clearItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"total spending :\", React.createElement(\"span\", {\n    className: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"$\", expenses.reduce((acc, curr) => {\n    return acc += curr.amount;\n  }, 0))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/user/Desktop/budget-calculator/src/App.js"],"names":["React","useState","useEffect","ExpenseForm","ExpenseList","Alert","uuid","initialExpenses","localStorage","getItem","JSON","parse","App","expenses","setExpenses","charge","setCharge","amount","setAmount","show","alert","setAlert","edit","setEdit","id","setId","console","log","setItem","stringify","handleCharge","e","target","value","handleAmount","parseInt","handleAlert","type","text","setTimeout","handleSubmit","preventDefault","tempExpenses","map","item","singleExpense","handleDelete","filter","clearItems","handleEdit","expense","find","reduce","acc","curr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ExpenseForm from \"./components/ExpenseForm\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport Alert from \"./components/Alert\";\nimport uuid from \"uuid/v4\"; /// for uniq id ///\n\n// const initialExpenses = [\n//   { id: uuid(), charge: \"rent\", amount: 1600 },\n//   { id: uuid(), charge: \"car payment\", amount: 400 },\n//   {\n//     id: uuid(),\n//     charge: \"credit card bill \",\n//     amount: 1200\n//   }\n// ];\n\nconst initialExpenses = localStorage.getItem(\"expenses\")\n  ? JSON.parse(localStorage.getItem(\"expenses\"))\n  : [];\n\nfunction App() {\n  // all expenses, add expense\n  const [expenses, setExpenses] = useState(initialExpenses);\n  // single expense\n  const [charge, setCharge] = useState(\"\");\n  // single amount\n  const [amount, setAmount] = useState(\"\");\n  // alert\n  const [alert, setAlert] = useState({ show: false });\n  // edit\n  const [edit, setEdit] = useState(false);\n  // id\n  const [id, setId] = useState(0);\n\n  useEffect(() => {\n    console.log(\"called\");\n\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  }, [expenses]);\n\n  // *********** functionality **************\n  //add charge\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  };\n\n  // add amount\n  const handleAmount = e => {\n    let amount = e.target.value;\n    if (amount === \"\") {\n      setAmount(amount);\n    } else {\n      setAmount(parseInt(amount));\n    }\n  };\n\n  // handle alert\n  const handleAlert = ({ type, text }) => {\n    setAlert({ show: true, type, text });\n    setTimeout(() => {\n      setAlert({ show: false });\n    }, 7000);\n  };\n\n  // handle submit\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (charge !== \"\" && amount > 0) {\n      if (edit) {\n        let tempExpenses = expenses.map(item => {\n          return item.id === id ? { ...item, charge, amount } : item;\n        });\n        setExpenses(tempExpenses);\n        setEdit(false);\n      } else {\n        const singleExpense = { id: uuid(), charge, amount };\n        setExpenses([...expenses, singleExpense]);\n        handleAlert({ type: \"success\", text: \"item added\" });\n      }\n      // set charge back to empty string\n      setCharge(\"\");\n      // set amount back to zero\n      setAmount(\"\");\n    } else {\n      handleAlert({\n        type: \"danger\",\n        text: `charge can't be empty value and amount value has to be bigger than zero`\n      });\n    }\n  };\n  \n  // handle delete\n  const handleDelete = id => {\n    let tempExpenses = expenses.filter(item => item.id !== id);\n    setExpenses(tempExpenses);\n    handleAlert({ type: \"danger\", text: \"item deleted\" });\n  };\n  //clear all items\n  const clearItems = () => {\n    setExpenses([]);\n  };\n  // handle edit\n  const handleEdit = id => {\n    let expense = expenses.find(item => item.id === id);\n    let { charge, amount } = expense;\n    setCharge(charge);\n    setAmount(amount);\n    setEdit(true);\n    setId(id);\n  };\n\n  return (\n    <>\n      {alert.show && <Alert type={alert.type} text={alert.text} />}\n      <h1>budget calculator</h1>\n      <main className=\"App\">\n        <ExpenseForm\n          handleSubmit={handleSubmit}\n          charge={charge}\n          handleCharge={handleCharge}\n          amount={amount}\n          handleAmount={handleAmount}\n          edit={edit}\n        />\n        <ExpenseList\n          expenses={expenses}\n          handleDelete={handleDelete}\n          handleEdit={handleEdit}\n          clearItems={clearItems}\n        />\n      </main>\n      <h1>\n        total spending :\n        <span className=\"total\">\n          $\n          {expenses.reduce((acc, curr) => {\n            return (acc += curr.amount);\n          }, 0)}\n        </span>\n      </h1>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}